Given a pattern and a string str, find if str follows the same pattern.

Here follow means a full match, such that there is a bijection between a letter in pattern and a non-empty word in str.

Example 1:

Input: pattern = "abba", str = "dog cat cat dog"
Output: true
Example 2:

Input:pattern = "abba", str = "dog cat cat fish"
Output: false
Example 3:

Input: pattern = "aaaa", str = "dog cat cat dog"
Output: false
Example 4:

Input: pattern = "abba", str = "dog dog dog dog"
Output: false
Notes:
You may assume pattern contains only lowercase letters, and str contains lowercase letters separated by a single space.

class Solution {
    public boolean wordPattern(String pattern, String str) {
         // write your code here
        Map<Character,String> cMap = new HashMap<>();
        Map<String,Character> sMap = new HashMap<>();
        
        String strs[] = str.split("\\s+");
        int lenOfPattern = pattern.length();
        if(lenOfPattern != strs.length) return false;
        
        for(int i = 0; i < lenOfPattern; i++){
            char c = pattern.charAt(i);
            String val = strs[i];
            if(cMap.containsKey(c)){
                
                if(!cMap.get(c).equals(val)){
                    return false;
                }
                
                if(sMap.get(val) != c){
                    return false;
                }
                
                
            }else{
                cMap.put(c, strs[i]);
                if(sMap.containsKey(val)){
                    return false;
                }else{
                    sMap.put(strs[i],c);
                }
            }
        }
        
        return true;
    }
}
