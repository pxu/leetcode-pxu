Given a binary tree, return the zigzag level order traversal of its nodes' values. (ie, from left to right, then right to left for the next level and alternate between).

For example:
Given binary tree [3,9,20,null,null,15,7],
    3
   / \
  9  20
    /  \
   15   7
return its zigzag level order traversal as:
[
  [3],
  [20,9],
  [15,7]
]

/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {
    public List<List<Integer>> zigzagLevelOrder(TreeNode root) {
        List<List<Integer>> res = new ArrayList<>();
        if(root == null){
            return res;
        }
        
        boolean inorder = true;
        Queue<TreeNode> queue = new LinkedList<>();
        queue.add(root);
        
        while(!queue.isEmpty()){
            int size = queue.size();
            List<Integer> currList = new LinkedList<>();
            for(int i = 0; i < size; i++){
                TreeNode curr = queue.remove();
                if(inorder){
                    currList.add(curr.val);
                }else{
                    currList.add(0, curr.val);
                }
                
                if(curr.left != null) queue.add(curr.left);
                if(curr.right !=null) queue.add(curr.right);
            }
            res.add(currList);
            inorder = !inorder;
        }
        
        return res;  
    }
}
