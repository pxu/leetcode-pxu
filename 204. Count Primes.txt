Count the number of prime numbers less than a non-negative number, n.

Example:

Input: 10
Output: 4
Explanation: There are 4 prime numbers less than 10, they are 2, 3, 5, 7.

class Solution {
    public int countPrimes(int n) {
        boolean isPrime[] = new boolean[n];
        Arrays.fill(isPrime, true);
        
        for(int i = 2; i*i <= n; i++){
            if(isPrime[i] == false){
                continue;
            }
            
            for(int j = 2; (j*i) < n; j++){
                isPrime[j*i] =  false;
            }
        }
        int count = 0;
        for(int i = 2; i < n; i++){
            if(isPrime[i]){
                count++;
            }
        }
        return count;
    }
}

solution 2:
public class Solution {
    /**
     * @param n: a integer
     * @return: return a integer
     */
    public int countPrimes(int n) {
        // write your code here
        int count[] = new int[n];
   
        for(int i = 2; i*i < n; i++ ){
            for(int j = 2; i*j< n; j++){
                count[i*j] = -1;
            }
        }
        
        int res = 0;
        for(int i = 2; i < n; i++){
            if(count[i] == 0){
                res++;
            }
        }
        
        return res;
        
    }
}

