Pick One

Given an array nums of n integers, are there elements a, b, c in nums such that a + b + c = 0? Find all unique triplets in the array which gives the sum of zero.
Note:
The solution set must not contain duplicate triplets.
Example:
Given array nums = [-1, 0, 1, 2, -1, -4],

A solution set is:
[
  [-1, 0, 1],
  [-1, -1, 2]
]

class Solution {
    public List<List<Integer>> threeSum(int[] nums) {
        List<List<Integer>> res = new ArrayList<>();
        Map<Integer,Integer> map = new HashMap<>();
        if(nums == null || nums.length == 0){
            return res;
        }
        
        Arrays.sort(nums);
        
        for(int i = 0; i < nums.length-2;i++){
            if(i == 0 || nums[i] != nums[i-1]){
                findPair(res, nums, i, i+1, nums.length-1, -nums[i]);    
            }   
        }
        
        return res;
        
    }
    
    private void findPair(List<List<Integer>> res, int[] nums,int curr, int start, int end, int target){
        int l = start;
        int r = end;
        while(l< r){
            if(nums[l] + nums[r] == target){
                res.add(Arrays.asList(nums[curr],nums[l],nums[r]));
                while(l<r && nums[l] == nums[l+1]) l++;
                while(l<r && nums[r] == nums[r-1]) r--;
                l++;
                r--;
            }else if(nums[l]+nums[r] < target){
                l++;
            }else{
                r--;
            }
        
        }
        
    }
}
