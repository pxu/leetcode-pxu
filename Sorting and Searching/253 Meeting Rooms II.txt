253 Meeting Rooms II
Given an array of meeting time intervals consisting of start and end times [[s1,e1],[s2,e2],...] (si < ei), find the minimum number of conference rooms required.

Example 1:

Input: [[0, 30],[5, 10],[15, 20]]
Output: 2
Example 2:

Input: [[7,10],[2,4]]
Output: 1

solution: sort, priorityqueue, need to update the queue each step
/**
 * Definition for an interval.
 * public class Interval {
 *     int start;
 *     int end;
 *     Interval() { start = 0; end = 0; }
 *     Interval(int s, int e) { start = s; end = e; }
 * }
 */
class Solution {
    public int minMeetingRooms(Interval[] intervals) {
        if(intervals == null || intervals.length == 0){
            return 0;
        }
        
        Comparator<Interval> comparator = new Comparator<Interval>(){
            @Override
            public int compare(Interval i1, Interval i2){
                return i1.start - i2.start;
            }
        };
        
        Arrays.sort(intervals, comparator);
        
        PriorityQueue<Integer> pq = new PriorityQueue<>();
        
        
        pq.add(intervals[0].end);
        
        for(int i = 1; i < intervals.length; i++){
            if(intervals[i].start >= pq.peek()){
                pq.remove();
            }
            pq.add(intervals[i].end);
            
        }
        
        return pq.size();
        
        
    }
}