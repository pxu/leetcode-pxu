Compare Version Numbers
Compare two version numbers version1 and version2.
If version1 > version2 return 1; if version1 < version2 return -1;otherwise return 0.

You may assume that the version strings are non-empty and contain only digits and the . character.
The . character does not represent a decimal point and is used to separate number sequences.
For instance, 2.5 is not "two and a half" or "half way to version three", it is the fifth second-level revision of the second first-level revision.

Example 1:

Input: version1 = "0.1", version2 = "1.1"
Output: -1
Example 2:

Input: version1 = "1.0.1", version2 = "1"
Output: 1
Example 3:

Input: version1 = "7.5.2.4", version2 = "7.5.3"
Output: -1

solution: split it and fill with 0 if length is less

class Solution {
    public int compareVersion(String version1, String version2) {
        String v1s[] = version1.split("\\.");
        String v2s[] = version2.split("\\.");
        int v1Len = v1s.length;
        int v2Len = v2s.length;
        
        int maxLen = Math.max(v1Len, v2Len);
        for(int i=0;i< maxLen; i++){
            Integer subV1 = i >= v1Len? 0: Integer.valueOf(v1s[i]);
            Integer subV2 = i >= v2Len? 0: Integer.valueOf(v2s[i]);
            
            if(subV1.compareTo(subV2) != 0){
                return subV1.compareTo(subV2);
            }
            
        }
        
        return 0;  
      
    }
}