270. Closest Binary Search Tree Value
Given a non-empty binary search tree and a target value, find the value in the BST that is closest to the target.

Note:

Given target value is a floating point.
You are guaranteed to have only one unique value in the BST that is closest to the target.
Example:

Input: root = [4,2,5,1,3], target = 3.714286

    4
   / \
  2   5
 / \
1   3

Output: 4

solution: bst
/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {
    public int closestValue(TreeNode root, double target) {
        double diff = Double.MAX_VALUE;
        Integer res = null; 
        
        TreeNode curr = root;
        
        while(curr != null){
            if(diff > Math.abs(target - curr.val)){
                res = curr.val;
                diff = Math.abs(target - curr.val);
            }
            if(target > curr.val){
                curr = curr.right;
            }else{
                curr = curr.left;
            }
        }
        
        return res;
    }
}