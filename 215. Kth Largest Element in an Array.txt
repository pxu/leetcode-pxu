215. Kth Largest Element in an Array
Find the kth largest element in an unsorted array. Note that it is the kth largest element in the sorted order, not the kth distinct element.

Example 1:

Input: [3,2,1,5,6,4] and k = 2
Output: 5
Example 2:

Input: [3,2,3,1,2,4,5,5,6] and k = 4
Output: 4
Note: 
You may assume k is always valid, 1 ≤ k ≤ array's length.

solution: quickselect + partition
class Solution {
    public int findKthLargest(int[] nums, int k) {
        if(nums == null || nums.length == 0){
            return -1;
        }
        
       return quickSelect(nums, 0, nums.length-1, nums.length -k);
    }
    
    private int quickSelect(int[] nums, int left, int right, int target){
        int piviot = partition(nums, left, right);
        if(piviot > target){
            return quickSelect(nums, left, piviot-1, target);
        }else if(piviot < target){
            return quickSelect(nums, piviot+1, right, target);
        }else{
            return nums[piviot];
        }
    }
    
    private int partition(int[] nums,int start, int end){
        
        int pivot = end;
        int left = start, right = end-1;
        
        while(left <= right){
            while(left <=right && nums[left]<= nums[pivot]) left++;
            while(left<=right && nums[right] > nums[pivot]) right--;
            if(left <= right){
                swap(nums,left, right);
            }
        }
        swap(nums,left,pivot);
        return left;
    }
    
    private void swap(int nums[], int index1,int index2){
        int temp = nums[index1];
        nums[index1] = nums[index2];
        nums[index2] = temp;
    }
}