Description
Given a positive integer n (1 <= n <= 10^18). Check whether a number has exactly three distinct factors, return true if it has exactly three distinct factors, otherwise false.

Have you met this question in a real interview?  
Example
Given n = 9, return true
Number 9 has exactly three factors: 1, 3, 9, so return true.

Given n = 10, return false

public class Solution {
    /**
     * @param n: the given number
     * @return:  return true if it has exactly three distinct factors, otherwise false
     */
    public boolean isThreeDisctFactors(long n) {
        // write your code here
        
        if(n <=3){
            return false;
        }
        
        long x = (long)Math.sqrt(n);
        return x*x == n && isPrime(n/x);
    }
    
    
    public boolean isPrime(long n){
        if (n == 1 ){
            return false;
        }
        
        if( n ==2){
            return true;
        }
        
        for(long i = 2; i*i <= n; i++){
            if(n%i == 0){
                return false;
            }
        }
        
        return true;
        
    }
}