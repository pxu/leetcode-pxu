Description
A matrix mat is given to find out all the numbers that appear in the row. If there are multiple, return the minimum number . If not, return -1.

The size of the matrix is n * m ,n * m <= 10^6.
Each number is a positive integer that is not more than 100000.
Have you met this question in a real interview?  
Example
Given mat = [[1,2,3],[3,4,1],[2,1,3]], return 1.

Explanation:
1 and 3 appear every line, while 1 is smaller than 3.
Given mat = [[1,2,3],[3,4,2],[2,1,8]], return 2.

Explanation:
2 appears in every row of the matrix.

public class Solution {
    /**
     * @param mat: The matrix
     * @return: The answer
     */
    public int findingNumber(int[][] mat) {
        // Write your code here
        
        if( mat == null || mat.length == 0 || mat[0].length == 0) return -1;
        Set<Integer> set = new HashSet<>();
        int rows = mat.length;
        int cols = mat[0].length;
        
        for(int val: mat[0]){
            set.add(val);  
        }
        
        for(int row = 1; row < rows; row++){
            List<Integer> itemsToRemove = new ArrayList<>();
            for(int curr: set){
                boolean found = false;
                for(int col = 0; col < cols; col++){
                    if(curr == mat[row][col]){
                        found = true;
                        break;
                    }
                }
                if(found == false){
                     itemsToRemove.add(curr);
                }
            }
            set.removeAll(itemsToRemove);
        }
        
        if(set.size() == 0){
            return -1;
        }else{
            int min = Integer.MAX_VALUE;
            for(int val: set){
                min = Math.min(min, val);
            }
            
            return min;
        }
        
    }
}
